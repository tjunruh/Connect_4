#include "display.h"
#include "io.h"

void display::print_board(std::string board[6][7]) {
	std::string board_to_print = "";
	for (int g = 0; g < 7; g++) {
		board_to_print = board_to_print + (" " + std::to_string(g + 1) + "  ");
	}
	board_to_print = board_to_print + "\n____________________________\n";

	for (int i = 0; i < 6; i++) {
		for (int j = 0; j < 7; j++) {
			board_to_print = board_to_print + board[i][j];
		}
		board_to_print = board_to_print + "\n";
	}

	board_to_print = board_to_print + "============================\n\n";
	connect4_io::print(board_to_print);
}

void display::menu(int selection) {
	display_logo();
	std::string menu_options[4] = { "Multiplayer", "Easy Computer", "Moderate Computer", "Hard Computer" };
	for (int option = 0; option < 4; option++) {
		if (selection == option) {
			connect4_io::print("                                                                ");
			connect4_io::print("* " + menu_options[option] + "\n");
		}
		else {
			connect4_io::print("                                                                ");
			connect4_io::print("  " + menu_options[option] + "\n");
		}
	}
}

void display::display_logo() {
	connect4_io::print(R"(________/\\\\\\\\\___________________________________________________________________________________________________________/\\\____)"
		"\n"
		R"( _____/\\\////////__________________________________________________________________________________________________________/\\\\\____)"
		"\n"
		R"(  ___/\\\/______________________________________________________________________________________/\\\_______________________/\\\/\\\____)"
		"\n"
		R"(   __/\\\_________________/\\\\\_____/\\/\\\\\\____/\\/\\\\\\_______/\\\\\\\\______/\\\\\\\\__/\\\\\\\\\\\________________/\\\/\/\\\____)"
		"\n"
		R"(    _\/\\\_______________/\\\///\\\__\/\\\////\\\__\/\\\////\\\____/\\\/////\\\___/\\\//////__\////\\\////_______________/\\\/__\/\\\____)"
		"\n"
		R"(     _\//\\\_____________/\\\__\//\\\_\/\\\__\//\\\_\/\\\__\//\\\__/\\\\\\\\\\\___/\\\____________\/\\\_________________/\\\\\\\\\\\\\\\\_)"
		"\n"
		R"(      __\///\\\__________\//\\\__/\\\__\/\\\___\/\\\_\/\\\___\/\\\_\//\\///////___\//\\\___________\/\\\_/\\____________\///////////\\\//__)"
		"\n"
		R"(       ____\////\\\\\\\\\__\///\\\\\/___\/\\\___\/\\\_\/\\\___\/\\\__\//\\\\\\\\\\__\///\\\\\\\\____\//\\\\\_______________________\/\\\____)"
		"\n"
		R"(        _______\/////////_____\/////_____\///____\///__\///____\///____\//////////_____\////////______\/////________________________\///_____)"
		"\n\n\n");
}